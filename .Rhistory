)
distinct(data["children"])
data
distinct(data["credit_history"])
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
View(data_before_cleaning)
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
View(data_before_cleaning)
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
)
distinct(data["credit_history"])
data
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=","))
View(data_before_cleaning)
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=","))
View(data_before_cleaning)
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
)
distinct(data["credit_history"])
data
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
View(data_before_cleaning)
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
)
distinct(data["credit_history"])
data
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=","))
View(data_before_cleaning)
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
)
distinct(data["credit_history"])
data
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
)
distinct(data["credit_history"])
data
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
credit_history = ifelse(dane$historie == "dobra historia", 1, 0)
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
credit_history = ifelse(historie == "dobra historia", 1, 0)
data
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
)
credit_history = ifelse(credit_history == "dobra historia", 1, 0)
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 1, 0)
)
distinct(data["credit_history"])
data
distinct(data["overdue_payments"])
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data_before_cleaning
distinct(data["overdue_payments"])
data_before_cleaning
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data_before_cleaning
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1)
)%>%
filter(!overdue_payments %in% c("2", "3", "4"))
distinct(data["overdue_payments"])
data
str(data)
distinct(data["employment_type"])
str(data)
distinct(data["owns_property"])
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data_before_cleaning
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1),
owns_property = ifelse(owns_property == "tak", 0, 1)
)%>%
filter(!overdue_payments %in% c("2", "3", "4"))
distinct(data["owns_property"])
str(data)
View(data_before_cleaning)
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
View(data_before_cleaning)
data <- data_before_cleaning[,-1] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1),
owns_property = ifelse(owns_property == "tak", 0, 1),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4"))
distinct(data["owns_property"])
str(data)
data
str(data)
distinct(data["other_loans"])
str(data)
distinct(data["education"])
str(data)
distinct(data["marital_status"])
str(data)
library(tidyverse)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,c(-1,-16)] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1),
owns_property = ifelse(owns_property == "tak", 0, 1),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4"))
distinct(data["marital_status"])
str(data)
data
str(data)
distinct(data["education"])
str(data)
library(fastDummies)
install.packages("fastDummies")
data
library(tidyverse)
library(fastDummies)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,c(-1,-16)] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1),
owns_property = ifelse(owns_property == "tak", 0, 1),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4"))
distinct(data["education"])
str(data)
data <- dummy_cols(data, select_columns = c("education", "city", "marital_status", "employment_type"))
data
library(tidyverse)
library(fastDummies)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,c(-1,-16)] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1),
owns_property = ifelse(owns_property == "tak", 0, 1),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4")) %>%
dummy_cols(data, select_columns = c("education", "city", "marital_status", "employment_type"))
library(tidyverse)
library(fastDummies)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,c(-1,-16)] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1),
owns_property = ifelse(owns_property == "tak", 0, 1),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4")) %>%
dummy_cols(select_columns = c("education", "city", "marital_status", "employment_type"))
data
library(tidyverse)
library(fastDummies)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,c(-1,-16)] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 0, 1),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 0, 1),
owns_property = ifelse(owns_property == "tak", 0, 1),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4")) %>%
dummy_cols(select_columns = c("education", "city", "marital_status", "employment_type"),remove_selected_columns = TRUE)
data
str(data)
summary(data)
library(knitr)
summary_data <- summary(data)
kable(summary_data, caption = "Summary of Data", align = 'c', format = 'html')
library(DT)
datatable(summary(data), options = list(pageLength = 5, autoWidth = TRUE))
library(DT)
datatable(summary(data), options = list(pageLength = 5, autoWidth = TRUE))
library(DT)
datatable(summary(data), options = list(pageLength = 6, autoWidth = TRUE))
library(formattable)
install.packages("formattable")
library(formattable)
formattable(summary(data), list(
Overall = color_tile("white", "lightblue"),
Min = color_bar("lightgreen"),
Max = color_bar("lightcoral")
))
library(stargazer)
# Tworzenie tabeli podsumowującej
stargazer(data, type = "text", summary = TRUE)
library(DT)
summary_data <- summary(data)
# Konwertowanie summary na data frame
summary_df <- as.data.frame(t(summary_data))
# Stworzenie ładnej tabeli
datatable(summary_df,
options = list(pageLength = 6, autoWidth = TRUE),
rownames = TRUE)
library(DT)
summary_data <- summary(data)
# Konwertowanie summary na data frame
summary_df <- as.data.frame(t(summary_data))
# Stworzenie ładnej tabeli
datatable(summary_df,
options = list(pageLength = 6, autoWidth = TRUE))
# Stworzenie ładnej tabeli
datatable(summary_df,
options = list(pageLength = 6, autoWidth = TRUE), rownames = False)
library(DT)
summary_data <- summary(data)
# Konwertowanie summary na data frame
summary_df <- as.data.frame(t(summary_data))
# Stworzenie ładnej tabeli
datatable(summary_df,
options = list(pageLength = 6, autoWidth = TRUE), rownames = FALSE )
library(DT)
summary_data <- summary(data)
# Konwertowanie summary na data frame
summary_df <- as.data.frame(t(summary_data))
# Stworzenie ładnej tabeli
datatable(summary_df,
options = list(pageLength = 6, autoWidth = TRUE), rownames = FALSE )
lm(credit_risk~.,data = data)
summary(lm(credit_risk~.,data = data))
is.na(data)
data[is.na(data)]
mod_p <- lm(credit_risk~.,data = data)
olsrr::ols_step_forward_aic(mod_p)
install.packages("randomForest")
library(dplyr)
library(fastDummies)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,c(-1,-16)] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 1, 0),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 1, 0),
owns_property = ifelse(owns_property == "tak", 1, 0),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4")) %>%
dummy_cols(select_columns = c("education", "city", "marital_status", "employment_type"),remove_selected_columns = TRUE)
mod_p <- lm(credit_risk~.,data = data)
olsrr::ols_step_forward_aic(mod_p)
write.csv(data, "data_after_preparation.csv", row.names = TRUE)
knitr::opts_chunk$set(echo = TRUE)
mod_p <- lm(credit_risk~.,data = data)
olsrr::ols_step_forward_aic(mod_p)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ggplot(data, aes(x = income)) +
geom_histogram(binwidth = 5000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Income", x = "Income", y = "Frequency")
ggplot(data, aes(x = education)) +
geom_bar(fill = "green") +
labs(title = "Education Distribution", x = "Education Level", y = "Count")
ggplot(data, aes(x = income, y = age, color = credit_history)) +
geom_point() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = income, y = age, color = credit_history)) +
geom_point() +
geom_line() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = income, y = age, color = credit_history)) +
geom_point() +
geom_abline() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = income, y = age, color = credit_history)) +
geom_point() +
geom_smooth() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = income, y = age, color = credit_history)) +
geom_point() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = income, y = age, color = credit_history)) +
geom_jitter() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = children, y = age, color = credit_history)) +
geom_boxplot() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = children, y = credit_history)) +
geom_boxplot() +
labs(title = "Income vs. Age by Credit History", x = "Income", y = "Age")
ggplot(data, aes(x = overdue_payments, y = income)) +
geom_boxplot() +
labs(title = "Income vs. Overdue Payments", x = "Overdue Payments", y = "Income")
library(corrplot)
correlation_matrix <- cor(data[, sapply(data, is.numeric)])
corrplot(correlation_matrix, method = "circle")
library(corrplot)
correlation_matrix <- cor(data[, sapply(data, is.numeric)])
corrplot(correlation_matrix, method = "circle", , tl.cex = 0 )
library(corrplot)
correlation_matrix <- cor(data[, sapply(data, is.numeric)])
corrplot(correlation_matrix, method = "circle",  tl.cex = 0 )
corrplot(correlation_matrix, method = "circle",  tl.cex  = 0 )
library(corrplot)
correlation_matrix <- cor(data[, sapply(data, is.numeric)])
corrplot(correlation_matrix, method = "circle", tl.pos = "n" )
ggplot(data, aes(x = income, y = age)) +
geom_point() +
facet_wrap(~ credit_history) +
labs(title = "Income vs. Age by Credit History")
library(corrplot)
correlation_matrix <- cor(data[, sapply(data, is.numeric)])
corrplot(correlation_matrix, method = "circle" )
library(corrplot)
correlation_matrix <- cor(data[, sapply(data, is.numeric)])
corrplot(correlation_matrix, method = "circle", tl.pos = "n" )
data <- read.csv2("../data_after_preparation.csv", sep=",")
data <- read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",")
data
data <- read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",")
data
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=",", na.strings = ""))
data <- data_before_cleaning[,c(-1,-16)] %>%
mutate(
income = as.numeric(str_replace(income, " złoty", "")),
children = as.numeric(ifelse(children == "brak", "0",
gsub(" dzieci", "", children)
)
),
credit_history = ifelse(credit_history == "dobra historia", 1, 0),
overdue_payments = ifelse(overdue_payments == "brak opóźnień", 1, 0),
owns_property = ifelse(owns_property == "tak", 1, 0),
assets_value = as.numeric(str_replace(income, " złoty", ""))
)%>%
filter(!overdue_payments %in% c("2", "3", "4")) %>%
dummy_cols(select_columns = c("education", "city", "marital_status", "employment_type"),remove_selected_columns = TRUE)
data
write.csv(data, "data_after_preparation.csv", row.names = TRUE)
write.csv(data, "data_after_preparation.csv", row.names = TRUE)
data <- read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",")
data
data <- read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", header = FALSE)
data
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=","))[-1]
data
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=","))[-1]
data
data_scaled <- scale(data)
# Przeprowadzenie PCA
pca_result <- prcomp(data_scaled, center = TRUE, scale. = TRUE)
# Podsumowanie wyników
summary(pca_result)
# Wykres wyników
plot(pca_result, main = "PCA")
# Wykres wyników
biplot(pca_result)
factor_result <- factanal(data, factors = 2)
library(MASS)
# Przeprowadzenie LDA
lda_model <- lda(class ~ x1 + x2 + x3, data = your_data)
library(MASS)
# Przeprowadzenie LDA
lda_model <- lda(credit_risk ~ ., data = data)
# Podsumowanie modelu
summary(lda_model)
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = "numeric"))[-1]
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = 1 ))[-1]
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = "numeric" ))[-1]
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = rep("numeric",24 ))[-1]
data
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = rep("numeric",23 ))[-1]
data
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = rep("numeric",25 ))[-1]
data
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = rep("numeric",25 )))[-1]
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = rep("numeric",24 )))[-1]
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",", colClasses = rep("numeric",24 )))
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=",")))
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=","))[-1]
data
data
data <- as.numeric((read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=","))[-1])
data <- (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=","))[-1]
data
data <- as.data.frame(lapply( (read.csv2("../Competision-BootCamp/data_after_preparation.csv", sep=","))[-1] , as.numeric))
data
data
library(tidyverse)
library(DT)
summary_data <- summary(data)
summary_df <- as.data.frame(t(summary_data))
datatable(summary_df,
options = list(pageLength = 6, autoWidth = TRUE), rownames = FALSE )
library(MASS)
# Przeprowadzenie LDA
lda_model <- lda(credit_risk ~ ., data = data)
# Podsumowanie modelu
summary(lda_model)
pca <- prcomp(df, center = TRUE, scale. = TRUE)
pca <- prcomp(data, center = TRUE, scale. = TRUE)
summary(pca)
