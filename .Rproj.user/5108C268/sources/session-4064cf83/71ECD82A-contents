---
title: "Data preparation"
author: "Szymon Makulec"
date: "2024-11-18"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#Data Loading and Processing

Data processing in such a way that only numeric values remain. For instance, "good history", "no delays", and "own property" are marked as 1, while their negative counterparts are marked as 0. Columns with multiple states: "education", "city", "marital_status", and "employment_type" are expanded into separate columns for each state, where 1 can be understood as "yes" and 0 as "no".

```{r}
library(tidyverse)
library(fastDummies)
library(caret)
data_before_cleaning <- na.omit(read.csv2("../Competision-BootCamp/data_atlas.csv", sep=","))
```

```{r}
data_before_cleaning %>% count(children) %>% arrange(desc(n))
data_before_cleaning %>% count(overdue_payments) %>% arrange(desc(n)) 
data_before_cleaning %>% count(active_loans) %>% arrange(desc(n)) 
unique(data_before_cleaning$marital_status)
```


```{r}
data <- data_before_cleaning[,c(-1,-16)] %>%
  mutate(
    across(everything(), ~str_replace(., "^$", NA_character_)),
    
    age = as.numeric(age),
    
    income = as.numeric(str_replace(income, " złoty", "")),
    
    children = as.numeric(ifelse(children == "brak", "0",
                                 gsub(" dzieci", "", children) 
                                 )
                          ),
    children = ifelse(children >= 3,"3", children), 
    children = as.factor(children),
    
    credit_history = as.factor(credit_history),
    
    overdue_payments = ifelse(overdue_payments == "brak opóźnień", "brak opóźnień","opóźnienia"),
    overdue_payments = as.factor(overdue_payments),
    
    active_loans = as.numeric(active_loans),
    active_loans = ifelse(active_loans >= 3,"3", active_loans), 
    
    active_loans = as.factor(active_loans),
    
    years_in_job = as.numeric(years_in_job),
    
    owns_property = ifelse(owns_property == "tak", 1, 0),
    owns_property = as.factor(owns_property),
    
    other_loans = as.factor(other_loans),
    
    assets_value = as.numeric(str_replace(income, " złoty", "")),
    
    credit_risk = as.factor(credit_risk),
    marital_status = gsub("/", "_", data_before_cleaning$marital_status ))%>%
  
  dummy_cols(select_columns = c("active_loans","children","education", "city", "marital_status", "employment_type"),remove_selected_columns = TRUE)
data
```

```{r}
data <- data[rowSums(is.na(data)) < 3,]

colSums(is.na(data)) # kolumny bez braków danych to same factory i  numeryczny income oraz assets_value

range.model <- preProcess(data, method = "range")
data <- predict(range.model, data)
library(zoo) # nic dodać nic ująć
data$income <- na.approx(data$income)
data$assets_value <- na.approx(data$assets_value)

library(missForest)

data <- missForest(data)$ximp 

sum(is.na(data))
```


Saving prepared data
```{r}
saveRDS(data, "data_after_preparation.rds")
```




